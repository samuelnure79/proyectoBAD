package model;
// Generated 23-may-2015 18:32:09 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Requisicion generated by hbm2java
 */
@Entity
@Table(name="REQUISICION"
    ,schema="GRUPO8"
)
public class Requisicion  implements java.io.Serializable {


     private int idRequisicion;
     private Empleado empleado;
     private Cliente cliente;
     private Date fechaReq;
     private BigDecimal fueDevuelto;
     private Set<Transaccion> transaccions = new HashSet<Transaccion>(0);
     private Set<Devolucion> devolucions = new HashSet<Devolucion>(0);
     private Set<DetalleRequisicion> detalleRequisicions = new HashSet<DetalleRequisicion>(0);

    public Requisicion() {
    }

	
    public Requisicion(int idRequisicion, Empleado empleado, Cliente cliente, Date fechaReq) {
        this.idRequisicion = idRequisicion;
        this.empleado = empleado;
        this.cliente = cliente;
        this.fechaReq = fechaReq;
    }
    public Requisicion(int idRequisicion, Empleado empleado, Cliente cliente, Date fechaReq, BigDecimal fueDevuelto, Set<Transaccion> transaccions, Set<Devolucion> devolucions, Set<DetalleRequisicion> detalleRequisicions) {
       this.idRequisicion = idRequisicion;
       this.empleado = empleado;
       this.cliente = cliente;
       this.fechaReq = fechaReq;
       this.fueDevuelto = fueDevuelto;
       this.transaccions = transaccions;
       this.devolucions = devolucions;
       this.detalleRequisicions = detalleRequisicions;
    }
   
     @Id 

    
    @Column(name="ID_REQUISICION", unique=true, nullable=false, precision=6, scale=0)
    public int getIdRequisicion() {
        return this.idRequisicion;
    }
    
    public void setIdRequisicion(int idRequisicion) {
        this.idRequisicion = idRequisicion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_EMPLEADO", nullable=false)
    public Empleado getEmpleado() {
        return this.empleado;
    }
    
    public void setEmpleado(Empleado empleado) {
        this.empleado = empleado;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_CLIENTE", nullable=false)
    public Cliente getCliente() {
        return this.cliente;
    }
    
    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="FECHA_REQ", nullable=false, length=7)
    public Date getFechaReq() {
        return this.fechaReq;
    }
    
    public void setFechaReq(Date fechaReq) {
        this.fechaReq = fechaReq;
    }

    
    @Column(name="FUE_DEVUELTO", precision=22, scale=0)
    public BigDecimal getFueDevuelto() {
        return this.fueDevuelto;
    }
    
    public void setFueDevuelto(BigDecimal fueDevuelto) {
        this.fueDevuelto = fueDevuelto;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="requisicion")
    public Set<Transaccion> getTransaccions() {
        return this.transaccions;
    }
    
    public void setTransaccions(Set<Transaccion> transaccions) {
        this.transaccions = transaccions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="requisicion")
    public Set<Devolucion> getDevolucions() {
        return this.devolucions;
    }
    
    public void setDevolucions(Set<Devolucion> devolucions) {
        this.devolucions = devolucions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="requisicion")
    public Set<DetalleRequisicion> getDetalleRequisicions() {
        return this.detalleRequisicions;
    }
    
    public void setDetalleRequisicions(Set<DetalleRequisicion> detalleRequisicions) {
        this.detalleRequisicions = detalleRequisicions;
    }




}


